#!/bin/bash
set -euo pipefail

function run_commands {
    COMMANDS=$1
    while IFS= read -r cmd; do echo "$cmd" && eval "$cmd"; done < <(printf '%s\n' "$COMMANDS")
}

function run_exit_commands {
    set +e
    set +o pipefail
    run_commands "${POST_COMMANDS_EXIT:-}"
}

main() {
  run_commands "${PRE_COMMANDS:-}"
  start=$(date +%s)
  echo Starting check at "$(date +"%Y-%m-%d %H:%M:%S")"
  set +e
  if ! restic --repo="${RESTIC_REPOSITORY}" check ${RESTIC_CHECK_ARGS:-}; then
    set -e
    run_commands "${POST_COMMANDS_FAILURE:-}"
    exit 1
  else
    set -e
  fi
  echo Check successful

  # Create JSON payload for the notification
  JSON_PAYLOAD=$(cat <<EOF
{
    "message": "${CHECK_SUCCESS_MESSAGE}",
    "number": "${NOTIFICATION_NUMBER}",
    "recipients": [
        "${NOTIFICATION_NUMBER}"
    ]
}
EOF
)

  # Send the notification using curl
  curl -X POST \
       -H "Content-Type: application/json" \
       "${NOTIFICATION_URL}" \
       -d "$JSON_PAYLOAD"

  end="$(date +%s)"
  echo Finished check at "$(date +"%Y-%m-%d %H:%M:%S")" after $((end-start)) seconds
  run_commands "${POST_COMMANDS_SUCCESS:-}"
}

trap run_exit_commands EXIT

main "$@"
